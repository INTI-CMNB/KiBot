.. Automatically generated by KiBot, please don't edit this file

.. index::
   pair: Spec to Field; spec_to_field

Spec to Field
~~~~~~~~~~~~~

   This filter extracts information from the specs obtained from component distributors
   and fills fields. |br|
   I.e. create a field with the RoHS status of a component. |br|
   In order to make it work you must be able to get prices using the KiCost options of
   the `bom` output. Make sure you can do this before trying to use this filter. |br|
   Usage `example <https://inti-cmnb.github.io/kibot-examples-1/spec_to_field/>`__. |br|


   -  Valid keys:

      -  **from_output** :index:`: <pair: filter - spec_to_field; from_output>` [:ref:`string <string>`] (default: ``''``) Name of the output used to collect the specs.
         Currently this must be a `bom` output with KiCost enabled and a distributor that returns specs.
      -  **specs** :index:`: <pair: filter - spec_to_field; specs>` [:ref:`list(dict) <list(dict)>` | :ref:`dict <dict>`] (default: ``[{'spec': '_voltage', 'field': 'Voltage'}, {'spec': '_tolerance', 'field': 'Tolerance'}, {'spec': '_power', 'field': 'Power'}, {'spec': '_current', 'field': 'Current'}]``) One or more specs to be copied.

         -  Valid keys:

            -  **field** :index:`: <pair: filter - spec_to_field - specs; field>` [:ref:`string <string>`] (default: ``''``) Name of the destination field.
            -  **spec** :index:`: <pair: filter - spec_to_field - specs; spec>` [:ref:`string <string>` | :ref:`list(string) <list(string)>`] (default: ``''``) [:ref:`comma separated <comma_sep>`] Name/s of the source spec/s.
               The following names are uniform across distributors: '_desc', '_value', '_tolerance', '_footprint',
               '_power', '_current', '_voltage', '_frequency', '_temp_coeff', '_manf' and '_size'.

            -  ``collision`` :index:`: <pair: filter - spec_to_field - specs; collision>` [:ref:`string <string>`] (default: ``'warning'``) (choices: "warning", "error", "ignore") How to report a collision between the current value and the new value.
            -  ``policy`` :index:`: <pair: filter - spec_to_field - specs; policy>` [:ref:`string <string>`] (default: ``'overwrite'``) (choices: "overwrite", "update", "new") Controls the behavior of the copy mechanism.
               `overwrite` always copy the spec value,
               `update` copy only if the field already exist,
               `new` copy only if the field doesn't exist..
            -  ``type`` :index:`: <pair: filter - spec_to_field - specs; type>` [string='string'] [percent,voltage,power,current,value,string] How we compare the current value to determine a collision.
               `value` is the component value i.e. resistance for R*.

      -  ``check_dist_coherence`` :index:`: <pair: filter - spec_to_field; check_dist_coherence>` [:ref:`boolean <boolean>`] (default: ``true``) Check that the data we got from different distributors is equivalent.
      -  ``check_dist_fields`` :index:`: <pair: filter - spec_to_field; check_dist_fields>` [:ref:`string <string>` | :ref:`list(string) <list(string)>`] (default: ``['_value', '_tolerance', '_power', '_current', '_voltage', '_temp_coeff']``) [:ref:`comma separated <comma_sep>`] List of fields to include in the check.
         For a full list of fields consult the `specs` option.

      -  ``comment`` :index:`: <pair: filter - spec_to_field; comment>` [:ref:`string <string>`] (default: ``''``) A comment for documentation purposes.
      -  ``name`` :index:`: <pair: filter - spec_to_field; name>` [:ref:`string <string>`] (default: ``''``) Used to identify this particular filter definition.

