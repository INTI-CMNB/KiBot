.. Automatically generated by KiBot, please don't edit this file

.. index::
   pair: Populate - Assembly instructions builder; populate

Populate - Assembly instructions builder
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Creates a markdown and/or HTML file explaining how to assembly a PCB.
Each step shows the already soldered components and the ones to add highlighted. |br|
This is equivalent to the PcbDraw's Populate command, but integrated to KiBot. |br|
For more information about the input markdown file please consult the
`documentation <docs/populate.md>`__

Type: ``populate``

Category: **PCB/docs**

Parameters:

-  **comment** :index:`: <pair: output - populate; comment>` [string=''] A comment for documentation purposes. It helps to identify the output.
-  **dir** :index:`: <pair: output - populate; dir>` [string='./'] Output directory for the generated files.
   If it starts with `+` the rest is concatenated to the default dir.
-  **name** :index:`: <pair: output - populate; name>` [string=''] Used to identify this particular output definition.
   Avoid using `_` as first character. These names are reserved for KiBot.
-  **options** :index:`: <pair: output - populate; options>` [dict] Options for the `populate` output.

   -  Valid keys:

      -  **format** :index:`: <pair: output - populate - options; format>` [string='html'] [html,md] Format for the generated output.
      -  **input** :index:`: <pair: output - populate - options; input>` [string=''] Name of the input file describing the assembly. Must be a markdown file.
         Note that the YAML section of the file will be skipped, all the needed information
         comes from this output and the `renderer` output.
      -  **renderer** :index:`: <pair: output - populate - options; renderer>` [string=''] Name of the output used to render the PCB steps.
         Currently this must be a `pcbdraw` or `render_3d` output.
      -  ``dnf_filter`` :index:`: <pair: output - populate - options; dnf_filter>` [string|list(string)='_none'] Name of the filter to mark components as not fitted.
         A short-cut to use for simple cases where a variant is an overkill.

      -  ``imgname`` :index:`: <pair: output - populate - options; imgname>` [string='img/populating_%d.%x'] Pattern used for the image names. The `%d` is replaced by the image number.
         The `%x` is replaced by the extension. Note that the format is selected by the
         `renderer`.
      -  ``initial_components`` :index:`: <pair: output - populate - options; initial_components>` [string|list(string)=''] List of components soldered before the first step.

      -  ``pre_transform`` :index:`: <pair: output - populate - options; pre_transform>` [string|list(string)='_none'] Name of the filter to transform fields before applying other filters.
         A short-cut to use for simple cases where a variant is an overkill.

      -  ``template`` :index:`: <pair: output - populate - options; template>` [string] The name of the handlebars template used for the HTML output.
         The extension must be `.handlebars`, it will be added when missing.
         The `simple.handlebars` template is a built-in template.
      -  ``variant`` :index:`: <pair: output - populate - options; variant>` [string=''] Board variant to apply.

-  **type** :index:`: <pair: output - populate; type>` 'populate'
-  ``category`` :index:`: <pair: output - populate; category>` [string|list(string)=''] The category for this output. If not specified an internally defined category is used.
   Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.
   The categories are currently used for `navigate_results`.

-  ``disable_run_by_default`` :index:`: <pair: output - populate; disable_run_by_default>` [string|boolean] Use it to disable the `run_by_default` status of other output.
   Useful when this output extends another and you don't want to generate the original.
   Use the boolean true value to disable the output you are extending.
-  ``extends`` :index:`: <pair: output - populate; extends>` [string=''] Copy the `options` section from the indicated output.
   Used to inherit options from another output of the same type.
-  ``groups`` :index:`: <pair: output - populate; groups>` [string|list(string)=''] One or more groups to add this output. In order to catch typos
   we recommend to add outputs only to existing groups. You can create an empty group if
   needed.

-  ``output_id`` :index:`: <pair: output - populate; output_id>` [string=''] Text to use for the %I expansion content. To differentiate variations of this output.
-  ``priority`` :index:`: <pair: output - populate; priority>` [number=50] [0,100] Priority for this output. High priority outputs are created first.
   Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.
-  ``run_by_default`` :index:`: <pair: output - populate; run_by_default>` [boolean=true] When enabled this output will be created when no specific outputs are requested.

