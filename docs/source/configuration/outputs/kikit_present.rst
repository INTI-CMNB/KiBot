.. Automatically generated by KiBot, please don't edit this file

.. index::
   pair: KiKit's Present - Project Presentation; kikit_present

KiKit's Present - Project Presentation
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Creates an HTML file showing your project.
It can contain one or more PCBs, showing their top and bottom sides. |br|
Also includes a download link and the gerbers. |br|

Type: ``kikit_present``

Category: **PCB/docs**

Parameters:

-  **comment** :index:`: <pair: output - kikit_present; comment>` [:ref:`string <string>`] (default: ``''``) A comment for documentation purposes. It helps to identify the output.
-  **dir** :index:`: <pair: output - kikit_present; dir>` [:ref:`string <string>`] (default: ``'./'``) Output directory for the generated files.
   If it starts with `+` the rest is concatenated to the default dir.
-  **name** :index:`: <pair: output - kikit_present; name>` [:ref:`string <string>`] (default: ``''``) Used to identify this particular output definition.
   Avoid using `_` as first character. These names are reserved for KiBot.
-  **options** :index:`: <pair: output - kikit_present; options>` [:ref:`dict <dict>`] Options for the `kikit_present` output.

   -  Valid keys:

      -  **description** :index:`: <pair: output - kikit_present - options; description>` [:ref:`string <string>`] (default: ``''``) Name for a markdown file containing the main part of the page to be generated.
         This is mandatory and is the description of your project.
         You can embed the markdown code. If the text doesn't map to a file and contains
         more than one line KiBot will assume this is the markdown.
      -  ``boards`` :index:`: <pair: output - kikit_present - options; boards>` [:ref:`dict <dict>` | :ref:`list(dict) <list(dict)>`] One or more boards that compose your project.
         When empty we will use only the main PCB for the current project.

         -  Valid keys:

            -  **name** :index:`: <pair: output - kikit_present - options - boards; name>` [:ref:`string <string>`] (default: ``''``) Name for this board. If empty we use the name of the PCB.
               Applies to all modes.
            -  ``back_image`` :index:`: <pair: output - kikit_present - options - boards; back_image>` [:ref:`string <string>`] (default: ``''``) How to obtain the back view of the PCB.
               *local*: the name of an output to render it.
               If empty we use the first renderer.
               *file*: the name of the rendered image.
               *external*: ignored, we use `extrenal_config`.
            -  ``comment`` :index:`: <pair: output - kikit_present - options - boards; comment>` [:ref:`string <string>`] (default: ``''``) A comment or description for this board.
               Applies to all modes.
            -  ``external_config`` :index:`: <pair: output - kikit_present - options - boards; external_config>` [:ref:`string <string>`] (default: ``''``) Name of an external KiBot configuration.
               Only used in the *external* mode.
            -  ``front_image`` :index:`: <pair: output - kikit_present - options - boards; front_image>` [:ref:`string <string>`] (default: ``''``) How to obtain the front view of the PCB.
               *local*: the name of an output to render it.
               If empty we use the first renderer.
               *file*: the name of the rendered image.
               *external*: ignored, we use `extrenal_config`.
            -  ``gerbers`` :index:`: <pair: output - kikit_present - options - boards; gerbers>` [:ref:`string <string>`] (default: ``''``) How to obtain an archive with the gerbers.
               *local*: the name of a `gerber` output.
               If empty we use the first `gerber` output.
               *file*: the name of a compressed archive.
               *external*: ignored, we use `extrenal_config`.
            -  ``mode`` :index:`: <pair: output - kikit_present - options - boards; mode>` [:ref:`string <string>`] (default: ``'local'``) (choices: "local", "file", "external") How images and gerbers are obtained.
               *local*: Only applies to the currently selected PCB.
               You must provide the names of the outputs used to render
               the images and compress the gerbers.
               When empty KiBot will use the first render/gerber output
               it finds.
               To apply variants use `pcb_from_output` and a `pcb_variant`
               output.
               *file*: You must specify the file names used for the images and
               the gerbers.
               *external*: You must specify an external KiBot configuration.
               It will be applied to the selected PCB to create the images and
               the gerbers. The front image must be generated in a dir called
               *front*, the back image in a dir called *back* and the gerbers
               in a dir called *gerbers*.
            -  ``pcb_file`` :index:`: <pair: output - kikit_present - options - boards; pcb_file>` [:ref:`string <string>`] (default: ``''``) Name of the KiCad PCB file. When empty we use the current PCB.
               Is ignored for the *local* mode.
            -  ``pcb_from_output`` :index:`: <pair: output - kikit_present - options - boards; pcb_from_output>` [:ref:`string <string>`] (default: ``''``) Use the PCB generated by another output.
               Is ignored for the *file* mode.

      -  ``name`` :index:`: <pair: output - kikit_present - options; name>` [:ref:`string <string>`] (default: ``''``) Name of the project. Will be passed to the template.
         If empty we use the name of the KiCad project.
         The default template uses it for things like the page title.
      -  ``repository`` :index:`: <pair: output - kikit_present - options; repository>` [:ref:`string <string>`] (default: ``''``) URL of the repository. Will be passed to the template.
         If empty we will try to find it using `git remote get-url origin`.
         The default template uses it to create an URL for the current commit.
      -  ``resources`` :index:`: <pair: output - kikit_present - options; resources>` [:ref:`string <string>` | :ref:`list(string) <list(string)>`] (default: ``''``)  A list of file name patterns for additional resources to be included.
         I.e. images referenced in description.
         They will be copied relative to the output dir.

      -  ``template`` :index:`: <pair: output - kikit_present - options; template>` [:ref:`string <string>`] (default: ``'default'``) Path to a template directory or a name of built-in one.
         See KiKit's doc/present.md for template specification.

-  **type** :index:`: <pair: output - kikit_present; type>` 'kikit_present'
-  ``category`` :index:`: <pair: output - kikit_present; category>` [:ref:`string <string>` | :ref:`list(string) <list(string)>`] (default: ``''``) The category for this output. If not specified an internally defined category is used.
   Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.
   The categories are currently used for `navigate_results`.

-  ``disable_run_by_default`` :index:`: <pair: output - kikit_present; disable_run_by_default>` [:ref:`string <string>` | :ref:`boolean <boolean>`] Use it to disable the `run_by_default` status of other output.
   Useful when this output extends another and you don't want to generate the original.
   Use the boolean true value to disable the output you are extending.
-  ``extends`` :index:`: <pair: output - kikit_present; extends>` [:ref:`string <string>`] (default: ``''``) Copy the `options` section from the indicated output.
   Used to inherit options from another output of the same type.
-  ``groups`` :index:`: <pair: output - kikit_present; groups>` [:ref:`string <string>` | :ref:`list(string) <list(string)>`] (default: ``''``) One or more groups to add this output. In order to catch typos
   we recommend to add outputs only to existing groups. You can create an empty group if
   needed.

-  ``output_id`` :index:`: <pair: output - kikit_present; output_id>` [:ref:`string <string>`] (default: ``''``) Text to use for the %I expansion content. To differentiate variations of this output.
-  ``priority`` :index:`: <pair: output - kikit_present; priority>` [:ref:`number <number>`] (default: ``50``) (range: 0 to 100) Priority for this output. High priority outputs are created first.
   Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.
-  ``run_by_default`` :index:`: <pair: output - kikit_present; run_by_default>` [:ref:`boolean <boolean>`] (default: ``true``) When enabled this output will be created when no specific outputs are requested.

