.. Automatically generated by KiBot, please don't edit this file

.. index::
   pair: DRC; drc

DRC
~~~

Runs the DRC (Distance Rules Check) to ensure we have a valid PCB.
You need a valid *fp-lib-table* installed. If not KiBot will try to temporarily install the template. |br|
This is a replacement for the *run_drc* preflight that needs KiCad 8 or newer. |br|
GUI exclusions and schematic parity are supported

   -  **drc** :index:`: <pair: preflight - drc; drc>` [:ref:`boolean <boolean>` | :ref:`dict <dict>`] (default: ``false``) Use a boolean for simple cases or fine-tune its behavior.

      -  Valid keys:

         -  **output** :index:`: <pair: preflight - drc - drc; output>` [:ref:`string <string>`] (default: ``'%f-%i%I%v.%x'``) Name for the generated archive (%i=drc %x=according to format). Affected by global options.
         -  ``all_track_errors`` :index:`: <pair: preflight - drc - drc; all_track_errors>` [:ref:`boolean <boolean>`] (default: ``false``) Report all the errors for all the tracks, not just the first.
         -  ``category`` :index:`: <pair: preflight - drc - drc; category>` [:ref:`string <string>` | :ref:`list(string) <list(string)>`] (default: ``''``) [:ref:`comma separated <comma_sep>`] The category for this preflight. If not specified an internally defined
            category is used.
            Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.
            The categories are currently used for `navigate_results`.

         -  ``dir`` :index:`: <pair: preflight - drc - drc; dir>` [:ref:`string <string>`] (default: ``''``) Sub-directory for the report.
         -  ``dont_stop`` :index:`: <pair: preflight - drc - drc; dont_stop>` [:ref:`boolean <boolean>`] (default: ``false``) Continue even if we detect errors.
         -  ``enabled`` :index:`: <pair: preflight - drc - drc; enabled>` [:ref:`boolean <boolean>`] (default: ``true``) Enable the check. This is the replacement for the boolean value.
         -  ``filters`` :index:`: <pair: preflight - drc - drc; filters>` [:ref:`list(dict) <list(dict)>`] (default: ``[]``) Used to manipulate the violations. Avoid using the *filters* preflight.

            -  Valid keys:

               -  ``change_to`` :index:`: <pair: preflight - drc - drc - filters; change_to>` [:ref:`string <string>`] (default: ``'ignore'``) (choices: "error", "warning", "ignore") The action of the filter.
                  Changing to *ignore* is the default and is used to suppress a violation, but you can also change
                  it to be an *error* or a *warning*. Note that violations excluded by KiCad are also analyzed,
                  so you can revert a GUI exclusion.
               -  ``error`` :index:`: <pair: preflight - drc - drc - filters; error>` [:ref:`string <string>`] (default: ``''``) Error id we want to exclude.
               -  ``filter`` :index:`: <pair: preflight - drc - drc - filters; filter>` [:ref:`string <string>`] (default: ``''``) Name for the filter, for documentation purposes.
               -  *filter_msg* :index:`: <pair: preflight - drc - drc - filters; filter_msg>` Alias for filter.
               -  ``regex`` :index:`: <pair: preflight - drc - drc - filters; regex>` [:ref:`string <string>`] (default: ``''``) Regular expression to match the text for the error we want to exclude.
               -  *regexp* :index:`: <pair: preflight - drc - drc - filters; regexp>` Alias for regex.

         -  ``format`` :index:`: <pair: preflight - drc - drc; format>` [:ref:`string <string>` | :ref:`list(string) <list(string)>`] (default: ``'HTML'``) (choices: "RPT", "HTML", "CSV", "JSON") [:ref:`comma separated <comma_sep>`] Format/s used for the report.
            You can specify multiple formats.

         -  ``ignore_unconnected`` :index:`: <pair: preflight - drc - drc; ignore_unconnected>` [:ref:`boolean <boolean>`] (default: ``false``) Ignores the unconnected nets. Useful if you didn't finish the routing.
         -  ``schematic_parity`` :index:`: <pair: preflight - drc - drc; schematic_parity>` [:ref:`boolean <boolean>`] (default: ``true``) Check if the PCB and the schematic are coincident.
         -  ``units`` :index:`: <pair: preflight - drc - drc; units>` [:ref:`string <string>`] (default: ``'millimeters'``) (choices: "millimeters", "inches", "mils") Units used for the positions. Affected by global options.
         -  ``warnings_as_errors`` :index:`: <pair: preflight - drc - drc; warnings_as_errors>` [:ref:`boolean <boolean>`] (default: ``false``) Warnings are considered errors, they still reported as warnings.


